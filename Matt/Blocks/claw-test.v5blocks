{"wrkspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">my variable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-10\" y=\"-10\"><next><block type=\"v5_motion_spin_to_position\" id=\"}2%@a2=K/c}VCs(#WK0n\"><field name=\"MOTOR\">claw</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"+KU?0H2;OKN.sx;X9q=i\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_control_wait\" id=\"G!wHv=u,:z.F*i57t=P:\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"{9QzGjfw_@QJ^a_OQVHr\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_motion_spin_to_position\" id=\"Nqe!Zmt7=e$?Q:oE9dc+\"><field name=\"MOTOR\">claw</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"cS@WPt,?V;SPA/sfTU[o\"><field name=\"NUM\">80</field></shadow></value></block></next></block></next></block></next></block><block type=\"v5_events_when_driver\" id=\"Bayt_=L!%tO;bNuD:K0K\" x=\"190\" y=\"310\"></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}},{"port":[3],"name":"claw","customName":true,"deviceType":"Motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[1,10,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","hasGyro":"false","width":"295","unit":"mm","id":"partner"}}],"slot":2,"cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"v5.h\"\n#include \"v5_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// Robot configuration code.\nvex::competition Competition;\n\ncontroller Controller1 = controller(vex::controllerType::primary);\nmotor claw = motor(vex::PORT3, vex::gearSetting::ratio18_1, false);\n\nvex::motor LeftDriveSmart = vex::motor(vex::PORT1, vex::gearSetting::ratio18_1, false);\nvex::motor RightDriveSmart = vex::motor(vex::PORT10, vex::gearSetting::ratio18_1, true);\nvex::drivetrain Drivetrain = vex::drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 130, distanceUnits::mm, 1);\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\nint Brain_precision, Controller1_precision;\n\n\n// Generated code.\n\nfloat my_variable;\n\nint whenStarted1() {\n  claw.rotateTo(0.0, vex::rotationUnits::deg, true);\n  task::sleep(static_cast<uint32_t>(1.0*1000));\n  claw.rotateTo(80.0, vex::rotationUnits::deg, true);\nreturn 0;\n}\n\nint ondriver_drivercontrol_0() {\nreturn 0;\n}\nvoid VEXcode_driver_task() {\n// Start the driver control tasks....\nvex::task drive0(ondriver_drivercontrol_0);\n\n\nwhile(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\ndrive0.stop();\nreturn;\n}\n\nvoid VEXcode_auton_task() {\n// Start the auton control tasks....\n\nwhile( Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\nreturn;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  srand(vex::timer::system());\n\n\n\n  // pre event registration\n  // register event handlers\n\n  task::sleep(15);\n  // post event registration\n\n  // when started blocks...\n\n  whenStarted1();\n  return 0;\n}","cppStatus":"true","platform":"V5","sdkVersion":"20190805.09.00.00","appVersion":"1.0.1-344","fileFormat":"0.1.1","icon":""}